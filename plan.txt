POST: send data to server
GET: retrieve data

loging brings you to home page

App.jsx is not Home page (IMPO)


Navbar:
Spark (default home page)
Create Spark (create posts) (not a page but a pop up)
mesages
save



Api:
fetches posts (which has likes, comments);

for suggested: fetch top 8 recent user profiles


when logged in:
store that data as a json
home page profile:
used the stored data to show profile, name and username



UserProfile.jsx

api --> fetches 8 most recent users created as "suggested users"


post table:
id, user_id, description, media_url, created_at
displaying the post we made:
store post in post table when clicked publish

fetch using post requesnt, in backend side insert data into post table

with every post:
DisplayPostCard.jsx component --> caption, post, like comment and save (optional share)
to display:
in Media.jsx use api fetch the post and display it from their


showing the media:

PostCard.jsx:
must be able to delete as well
description, image --> like comment, save (as props);


Media.jsx:
fetching data thats in posts table,

like table:
id, user_id, post_id

getting the posters profile : name, time created, and username

fetch posts user_id with get request token:
then fetch users with the user_id from post to get the users profile\


likes:

sending data (post) to likes table to update like count

comments table: id, user_id, comment, created_at, post_id;
comment:
onclick of comments:
opens modal ovrlay with comment section;
in comment section:
no comments yet || {the comments};
[type to add comment];

taking the value in the input field;
storing that in comments table "comment" including with corresponding user_id, post_id

saved_posts table:
user_id, post_id, saved_at
save:
onclick sending data to show that the posts has been saved_at
we get: the ENTIRE saved post

suggested user redo:

fetching 8 most recent (maybe random) user_profiles and displaying then

get 8 user_ids from user_profiles for profile pic, with user_id which matches with id in users table,
get full_name and username

followers table: id, following_user_id, follower_user_id, created_at
following:
create button component:
when clicked sends posts request to update following count,
and the user that is followed gets upadted follower count,
vice versa

when clicked unfollow, delete the count for both

edit drop down:
edit post, delete post

edit post: using PUT request? if in edit mode:
it goes in the createPost screen.
taking posts and then swapping values or something

delete post:
onclick send a post requesnt and delete all columns of that post


whats left (MUST):
- posts loading feature so it doesn't fetch all at once
- real time messaging between 2 people
- display followers/following users profiles in page (personal and public)


addition features (optional):
- notification system, group chat,
- settings page, (activity log, change passwords, change email other features etc)
- tags posts tags,
- friend requests,
- display followers/following users profiles in page (personal and public)
- option for account to be private
- comments on comments and liking comments


the single user profile,

get posts based on that user_id, not all posts
with that user_id get user profile

user_settings: id, user_id, setting_name, setting_value


fix:


search bar:

when inputting, looks for username, and full_name
