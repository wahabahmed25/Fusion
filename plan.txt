POST: send data to server
GET: retrieve data

loging brings you to home page

App.jsx is not Home page (IMPO)


Navbar:
Spark (default home page)
Create Spark (create posts) (not a page but a pop up)
mesages
save



Api:
fetches posts (which has likes, comments);

for suggested: fetch top 8 recent user profiles


when logged in:
store that data as a json
home page profile:
used the stored data to show profile, name and username



UserProfile.jsx

api --> fetches 8 most recent users created as "suggested users"


post table:
id, user_id, description, media_url, created_at
displaying the post we made:
store post in post table when clicked publish

fetch using post requesnt, in backend side insert data into post table

with every post:
DisplayPostCard.jsx component --> caption, post, like comment and save (optional share)
to display:
in Media.jsx use api fetch the post and display it from their


showing the media:

PostCard.jsx:
must be able to delete as well
description, image --> like comment, save (as props);


Media.jsx:
fetching data thats in posts table,

like table:
id, user_id, post_id

getting the posters profile : name, time created, and username

fetch posts user_id with get request token:
then fetch users with the user_id from post to get the users profile\


likes:

sending data (post) to likes table to update like count

comments table: id, user_id, comment, created_at, post_id;
comment:
onclick of comments:
opens modal ovrlay with comment section;
in comment section:
no comments yet || {the comments};
[type to add comment];

taking the value in the input field;
storing that in comments table "comment" including with corresponding user_id, post_id

saved_posts table:
user_id, post_id, saved_at
save:
onclick sending data to show that the posts has been saved_at
we get: the ENTIRE saved post